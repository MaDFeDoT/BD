/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bank_database;

import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.*; 
import java.awt.*; 
import java.awt.event.*;
import net.proteanit.sql.*;
import java.util.*;
public class SubjectOperation extends javax.swing.JFrame {

    public Connection conn = null;
    public Vector<String> Cell_numbers = new Vector<String>();
    public Vector<String> Contracts_id = new Vector<String>();
    public int kol=0;
    String Contract_id = null;
    public SubjectOperation(Connection connect, String cli_id, String nam) {
        initComponents();
        conn=connect;
        Name.setText(nam);
        try{
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String Date = dateFormat.format( new java.util.Date() );
            String Query = "SELECT CONTRACT_ID, CELL_NUMBER FROM CONTRACTS WHERE (CLIENT_ID="+cli_id+")";//AND(END_DATE>\'"+Date+"\')";
            PreparedStatement statement = conn.prepareStatement(Query);
            ResultSet resultSet = statement.executeQuery();
            kol=0;
            while(resultSet.next())
            {
                Cell_numbers.add(resultSet.getString("CELL_NUMBER"));
                Contracts_id.add(resultSet.getString("CONTRACT_ID"));
                kol=kol+1;
            }
            DefaultComboBoxModel model = new DefaultComboBoxModel( Cell_numbers );
            Cells.setModel( model );
            if(Cells.getSelectedItem()!=null)
            {
                String Cell_number=Cells.getSelectedItem().toString();
                for(int i=0; i<kol; i++)
                {
                    if(Cell_number==Cell_numbers.get(i))
                        Contract_id=Contracts_id.get(i);
                }
            }
            MySubject.setEnabled(false);
            PutSubject.setEnabled(false); 
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
            jButton3.setEnabled(false);
   
        } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Subject = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Cost_it = new javax.swing.JTextField();
        MySubject = new javax.swing.JButton();
        PutSubject = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        Cells = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Ваше имя");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Номер вашей ячейки");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Предмет");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Стоимость");

        MySubject.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        MySubject.setText("Мои предметы");
        MySubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MySubjectActionPerformed(evt);
            }
        });

        PutSubject.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PutSubject.setText("Положить предмет в ячейку");
        PutSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PutSubjectActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Забрать предмет из ячейки");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Осмотреть");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("История ячейки");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Cells.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CellsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Name))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Cells, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Subject))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Cost_it, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(PutSubject, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                        .addComponent(MySubject, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Cells, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Cost_it, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(MySubject, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PutSubject)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MySubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MySubjectActionPerformed
        MySubject subj = new MySubject(conn, Name.getText(), Contract_id);
        subj.setVisible(true);
    }//GEN-LAST:event_MySubjectActionPerformed

    private void PutSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PutSubjectActionPerformed
        String Cell_number, Name, Cost, Date;
            try { 
            String Query = "SELECT CELL_NUMBER, CLIENT_ID FROM CONTRACTS WHERE CONTRACT_ID="+Contract_id;
                PreparedStatement statement = conn.prepareStatement(Query);
                ResultSet resultSet = statement.executeQuery();
                if(!resultSet.next())
                        {
                            JOptionPane.showMessageDialog(null, "Не существует данного контракта.");
                            return;                              
                        }
            Cell_number=resultSet.getString("CELL_NUMBER");
            Name = Subject.getText();

            Cost = Cost_it.getText();

            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date = dateFormat.format( new java.util.Date() );
            
            
                Query = "SELECT MAX(ID) AS COLL FROM HISTORY_CELL";
                statement = conn.prepareStatement(Query);
                resultSet = statement.executeQuery();
                resultSet.next();
                int num=resultSet.getInt("COLL")+1;
                String History_id=String.valueOf(num);
                
                Query = "SELECT MAX(ITEM_ID) AS COLL FROM ITEMS";
                statement = conn.prepareStatement(Query);
                resultSet = statement.executeQuery();
                resultSet.next();
                num=resultSet.getInt("COLL")+1;
                String Item_id=String.valueOf(num);
                
                Query = "INSERT INTO ITEMS(ITEM_ID, CONTRACT_ID, NAME, COST) "
                        + "VALUES ("+Item_id+", "+Contract_id+", \'"+Name+"\', "+Cost+")";
                statement = conn.prepareStatement(Query);
                statement.execute();
                
                Query = "INSERT INTO HISTORY_CELL(ID, CELL_NUMBER, ACSESS_TYPE, DATE_ACSESS, ITEM_ID) "
                        + "VALUES ("+History_id+", "+Cell_number+", 1, \'"+Date+"\', "+Item_id+")";
                statement = conn.prepareStatement(Query);
                statement.execute();
                JOptionPane.showMessageDialog(null, "Предмет добавлен");
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }    
 
    }//GEN-LAST:event_PutSubjectActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String Cell_number, Date, Item_id, Name, Cost;
        try{
            Name = Subject.getText();
            //Cost = Cost_it.getText();
            
            String Query = "SELECT CELL_NUMBER, CLIENT_ID FROM CONTRACTS WHERE CONTRACT_ID="+Contract_id;
                PreparedStatement statement = conn.prepareStatement(Query);
                ResultSet resultSet = statement.executeQuery();
                if(!resultSet.next())
                        {
                            JOptionPane.showMessageDialog(null, "Не существует данного контракта.");
                            return;                              
                        }
            Cell_number=resultSet.getString("CELL_NUMBER");
            
            Query = "SELECT ITEM_ID FROM ITEMS WHERE (CONTRACT_ID="+Contract_id+")AND(NAME=\'"+Name+"\')";//AND(COST="+Cost+")";
            statement = conn.prepareStatement(Query);
            resultSet = statement.executeQuery();
                if(!resultSet.next())
                        {
                            JOptionPane.showMessageDialog(null, "Не существует данного контракта.");
                            return;                              
                        }
            Item_id=resultSet.getString("ITEM_ID");
            
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date = dateFormat.format( new java.util.Date() );
            
        
                Query = "SELECT MAX(ID) AS COLL FROM HISTORY_CELL";
                statement = conn.prepareStatement(Query);
                resultSet = statement.executeQuery();
                resultSet.next();
                int num=resultSet.getInt("COLL")+1;
                String History_id=String.valueOf(num);
                Query = "SELECT ITEM_ID AS NUM FROM HISTORY_CELL WHERE (ITEM_ID="+Item_id+")AND(CELL_NUMBER="+Cell_number+")AND(ACSESS_TYPE=2)AND(DATE_ACSESS>"
                        + "(SELECT FIRST 1 DATE_ACSESS FROM HISTORY_CELL WHERE ACSESS_TYPE<2 ORDER BY DATE_ACSESS ASC))";
                statement = conn.prepareStatement(Query);
                resultSet = statement.executeQuery();
                
                if(resultSet.next())
                {
                    JOptionPane.showMessageDialog(null, "\tПредмет уже изъят из ячейки\n");
                    return;
                }
                Query = "INSERT INTO HISTORY_CELL(ID, CELL_NUMBER, ACSESS_TYPE, DATE_ACSESS, ITEM_ID) "
                        + "VALUES ("+History_id+", "+Cell_number+", 2, \'"+Date+"\', "+Item_id+")";
                statement = conn.prepareStatement(Query);
                statement.execute();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }    
            JOptionPane.showMessageDialog(null, "\tПредмет изъят из ячейки\n");     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String Cell_number, Date, Item_id, Name, Cost;
        try{
            Name = Subject.getText();
           // Cost = Cost_it.getText();
            
            String Query = "SELECT CELL_NUMBER, CLIENT_ID FROM CONTRACTS WHERE CONTRACT_ID="+Contract_id;
                PreparedStatement statement = conn.prepareStatement(Query);
                ResultSet resultSet = statement.executeQuery();
                if(!resultSet.next())
                        {
                            JOptionPane.showMessageDialog(null, "Не существует данного контракта.");
                            return;                              
                        }
            Cell_number=resultSet.getString("CELL_NUMBER");
            
            Query = "SELECT ITEM_ID FROM ITEMS WHERE (CONTRACT_ID="+Contract_id+")AND(NAME=\'"+Name+"\')";//AND(COST="+Cost+")";
            statement = conn.prepareStatement(Query);
            resultSet = statement.executeQuery();
                if(!resultSet.next())
                        {
                            JOptionPane.showMessageDialog(null, "Не существует данного контракта.");
                            return;                              
                        }
            Item_id=resultSet.getString("ITEM_ID");
            
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date = dateFormat.format( new java.util.Date() );
            
            
                Query = "SELECT MAX(ID) AS COLL FROM HISTORY_CELL";
                statement = conn.prepareStatement(Query);
                resultSet = statement.executeQuery();
                resultSet.next();
                int num=resultSet.getInt("COLL")+1;
                String History_id=String.valueOf(num);
                
                Query = "SELECT ITEM_ID AS NUM FROM HISTORY_CELL WHERE (ITEM_ID="+Item_id+")AND(CELL_NUMBER="+Cell_number+")AND(ACSESS_TYPE=2)AND(DATE_ACSESS>"
                        + "(SELECT FIRST 1 DATE_ACSESS FROM HISTORY_CELL WHERE ACSESS_TYPE<2 ORDER BY DATE_ACSESS DESC))";
                statement = conn.prepareStatement(Query);
                resultSet = statement.executeQuery();
                
                if(resultSet.next())
                {
                    JOptionPane.showMessageDialog(null, "\tПредмет изъят из ячейки. Осмотр не возможен\n");
                    return;
                }
                Query = "INSERT INTO HISTORY_CELL(ID, CELL_NUMBER, ACSESS_TYPE, DATE_ACSESS, ITEM_ID) "
                        + "VALUES ("+History_id+", "+Cell_number+", 0, \'"+Date+"\', "+Item_id+")";
                statement = conn.prepareStatement(Query);
                statement.execute();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }    
            JOptionPane.showMessageDialog(null, "\tПредмет осмотрен\n");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String Cell_number, Start_date, End_date;
        try{
            
            String Query = "SELECT CELL_NUMBER, CLIENT_ID, START_DATE, END_DATE FROM CONTRACTS WHERE CONTRACT_ID="+Contract_id;
                PreparedStatement statement = conn.prepareStatement(Query);
                ResultSet resultSet = statement.executeQuery();
                if(!resultSet.next())
                        {
                            JOptionPane.showMessageDialog(null, "Не существует данного контракта.");
                            return;                              
                        }
            Cell_number=resultSet.getString("CELL_NUMBER");
            Start_date=resultSet.getString("START_DATE");
            End_date=resultSet.getString("END_DATE");
            Query = "SELECT ID, CELL_NUMBER, ACSESS_TYPE, DATE_ACSESS, HISTORY_CELL.ITEM_ID, NAME, COST FROM HISTORY_CELL, ITEMS "
                    + "WHERE (CELL_NUMBER="+Cell_number+")AND(HISTORY_CELL.ITEM_ID=ITEMS.ITEM_ID)AND(DATE_ACSESS>\'"+Start_date+"\')AND(DATE_ACSESS<\'"+End_date+"\')";
            statement = conn.prepareStatement(Query);
            resultSet = statement.executeQuery();
            JTable t = new JTable(DbUtils.resultSetToTableModel(resultSet));
            HistoryList list=new HistoryList(t);
            list.setVisible(true);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }    
            
    }//GEN-LAST:event_jButton3ActionPerformed

    private void CellsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CellsActionPerformed
        String Cell_number=Cells.getSelectedItem().toString();
        for(int i=0; i<kol; i++)
        {
            if(Cell_number==Cell_numbers.get(i))
                Contract_id=Contracts_id.get(i);
        }
        System.out.println(Contract_id);
        MySubject.setEnabled(true);
        PutSubject.setEnabled(true); 
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
    }//GEN-LAST:event_CellsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Cells;
    private javax.swing.JTextField Cost_it;
    private javax.swing.JButton MySubject;
    private javax.swing.JTextField Name;
    private javax.swing.JButton PutSubject;
    private javax.swing.JTextField Subject;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
